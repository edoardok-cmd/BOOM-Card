apiVersion: v1
kind: Namespace
metadata:
  name: boom-card
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: boom-card-config
  namespace: boom-card
data:
  NODE_ENV: "production"
  API_PORT: "3000"
  FRONTEND_PORT: "3001"
  REDIS_PORT: "6379"
  DATABASE_NAME: "boom_card"
  SUPPORTED_LANGUAGES: "en,bg"
  DEFAULT_LANGUAGE: "bg"
  SESSION_COOKIE_NAME: "boom_session"
  CORS_ORIGIN: "https://boom-card.com,https://www.boom-card.com"
  RATE_LIMIT_WINDOW: "15"
  RATE_LIMIT_MAX_REQUESTS: "100"
  UPLOAD_MAX_SIZE: "10485760"
  JWT_EXPIRES_IN: "7d"
  REFRESH_TOKEN_EXPIRES_IN: "30d"
  CACHE_TTL: "3600"
  PAGINATION_DEFAULT_LIMIT: "20"
  PAGINATION_MAX_LIMIT: "100"
---
apiVersion: v1
kind: Secret
metadata:
  name: boom-card-secrets
  namespace: boom-card
type: Opaque
stringData:
  DATABASE_URL: "postgresql://boom_user:your_password@postgres-service:5432/boom_card"
  REDIS_URL: "redis://redis-service:6379"
  JWT_SECRET: "your-jwt-secret-key"
  REFRESH_TOKEN_SECRET: "your-refresh-token-secret"
  STRIPE_SECRET_KEY: "your-stripe-secret-key"
  STRIPE_WEBHOOK_SECRET: "your-stripe-webhook-secret"
  AWS_ACCESS_KEY_ID: "your-aws-access-key"
  AWS_SECRET_ACCESS_KEY: "your-aws-secret-key"
  AWS_S3_BUCKET: "boom-card-assets"
  SMTP_HOST: "smtp.gmail.com"
  SMTP_PORT: "587"
  SMTP_USER: "noreply@boom-card.com"
  SMTP_PASSWORD: "your-smtp-password"
  GOOGLE_MAPS_API_KEY: "your-google-maps-api-key"
  SENTRY_DSN: "your-sentry-dsn"
  ENCRYPTION_KEY: "your-encryption-key"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boom-card-api
  namespace: boom-card
  labels:
    app: boom-card-api
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: boom-card-api
  template:
    metadata:
      labels:
        app: boom-card-api
        tier: backend
    spec:
      containers:
      - name: api
        image: boom-card/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        envFrom:
        - configMapRef:
            name: boom-card-config
        - secretRef:
            name: boom-card-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: boom-card-uploads-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boom-card-frontend
  namespace: boom-card
  labels:
    app: boom-card-frontend
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: boom-card-frontend
  template:
    metadata:
      labels:
        app: boom-card-frontend
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: boom-card/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "https://api.boom-card.com"
        - name: NEXT_PUBLIC_STRIPE_PUBLIC_KEY
          value: "your-stripe-public-key"
        - name: NEXT_PUBLIC_GOOGLE_MAPS_API_KEY
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: GOOGLE_MAPS_API_KEY
        - name: NEXT_PUBLIC_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: SENTRY_DSN
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boom-card-worker
  namespace: boom-card
  labels:
    app: boom-card-worker
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: boom-card-worker
  template:
    metadata:
      labels:
        app: boom-card-worker
        tier: backend
    spec:
      containers:
      - name: worker
        image: boom-card/worker:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: boom-card-config
        - secretRef:
            name: boom-card-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: boom-card
  labels:
    app: postgres
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        tier: database
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: boom_card
        - name: POSTGRES_USER
          value: boom_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: boom-card
  labels:
    app: redis
    tier: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        tier: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - --requirepass
        - "$(REDIS_PASSWORD)"
        - --maxmemory
        - "256mb"
        - --maxmemory-policy
        - "allkeys-lru"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: boom-card-api-service
  namespace: boom-card
  labels:
    app: boom-card-api
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: boom-card-api
---
apiVersion: v1
kind: Service
metadata:
  name: boom-card-frontend-service
  namespace: boom-card
  labels:
    app: boom-card-frontend
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: boom-card-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: boom-card
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: boom-card
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: boom-card
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: boom-card-uploads-pvc
  namespace: boom-card
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: boom-card-ingress
  namespace: boom-card
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://boom-card.com,https://www.boom-card.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  tls:
  - hosts:
    - boom-card.com
    - www.boom-card.com
    - api.boom-card.com
    secretName: boom-card-tls
  rules:
  - host: boom-card.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: boom-card-frontend-service
            port:
              number: 3001
  - host: www.boom-card.com
    http:
      paths:
      - path: /
        pathTyp