user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll; # Optimize for Linux systems
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Custom log format for detailed access logging, including forwarded IP
    log_format boomcard_access '$remote_addr - $remote_user [$time_local] "$request" '
                               '$status $body_bytes_sent "$http_referer" '
                               '"$http_user_agent" "$http_x_forwarded_for" '
                               '$request_time';

    access_log /var/log/nginx/access.log boomcard_access;
    error_log /var/log/nginx/error.log error;

    # Basic performance tuning and connection management
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off; # Hide Nginx version for security

    # Gzip compression to reduce bandwidth usage
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    gzip_disable "MSIE [1-6]\."; # Disable gzip for old IE versions

    # Common SSL/TLS settings for enhanced security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_buffer_size 8k;
    ssl_stapling on;        # Enable OCSP stapling
    ssl_stapling_verify on; # Verify OCSP responses
    resolver 8.8.8.8 8.8.4.4 valid=300s; # Google Public DNS, adjust to your preferred DNS resolver
    resolver_timeout 5s;

    # Custom error pages (optional, Next.js apps often handle their own)
    # Ensure these HTML files exist in /usr/share/nginx/html or specified root
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    # location = /404.html { root /usr/share/nginx/html; internal; }
    # location = /50x.html { root /usr/share/nginx/html; internal; }

    # Upstream definitions for backend services (Next.js apps and Node.js API)
    # Assuming services run on localhost with specific ports for demonstration
    # In a production setup, these might be internal IPs or Docker service names
    upstream boomcard_consumer_app {
        server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
        keepalive 64; # Allows persistent connections to upstream servers
    }

    upstream boomcard_partner_dashboard {
        server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
        keepalive 64;
    }

    upstream boomcard_admin_panel {
        server 127.0.0.1:3002 max_fails=3 fail_timeout=30s;
        keepalive 64;
    }

    upstream boomcard_api_gateway {
        server 127.0.0.1:4000 max_fails=3 fail_timeout=30s;
        keepalive 64;
    }

    # Rate limiting for API (optional but highly recommended for security)
    # Define a zone for rate limiting based on client IP address
    # This zone stores states for 10 million IP addresses (10m) and allows
    # an average rate of 10 requests per second (rate=10r/s).
    # limit_req_zone $binary_remote_addr zone=api_rate_limit:10m rate=10r/s;
    # Define a zone for limiting concurrent connections per client IP
    # This zone stores states for 10 million IP addresses (10m)
    # limit_conn_zone $binary_remote_addr zone=api_conn_limit:10m;


    # Server block for boomcard.com (Consumer Web Application)
    # This block redirects all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name boomcard.com www.boomcard.com;
        return 301 https://$host$request_uri; # Permanent redirect to HTTPS
    }

    server {
        listen 443 ssl http2; # Listen for HTTPS traffic with HTTP/2 support
        server_name boomcard.com www.boomcard.com;

        # SSL certificate paths (REPLACE WITH YOUR ACTUAL CERTIFICATE AND KEY PATHS)
        ssl_certificate /etc/nginx/ssl/boomcard.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/boomcard.com/privkey.pem;

        # HTTP Strict Transport Security (HSTS) - enforce HTTPS for future visits
        # max-age=1 year, include subdomains, preload for browser HSTS lists
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN";       # Prevent clickjacking by restricting framing
        add_header X-Content-Type-Options "nosniff";   # Prevent MIME-sniffing
        add_header X-XSS-Protection "1; mode=block";   # Enable XSS filtering in browsers
        add_header Referrer-Policy "no-referrer-when-downgrade"; # Control referrer information
        # Content-Security-Policy: A powerful security header, often best managed by the application
        # for dynamic values. Example below if Nginx sets it:
        # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' wss:; object-src 'none'; media-src 'self'; frame-ancestors 'self'; form-action 'self';";

        # Serve Next.js static assets directly from Nginx for performance
        # This prevents Next.js server from handling static file requests
        location ~ ^/_next/static/ {
            # IMPORTANT: Replace with the actual absolute path to your consumer app's .next/static directory
            alias /var/www/boomcard/consumer-app/.next/static/;
            expires 1y; # Cache static assets for a long time
            access_log off; # No need to log static asset access
            add_header Cache-Control "public, immutable"; # Indicate assets won't change
        }

        # Handle other static assets if any (e.g., custom images, fonts)
        # location ~* \.(jpg|jpeg|gif|png|ico|css|js|woff|woff2|ttf|svg|eot)$ {
        #     root /var/www/boomcard/consumer-app/public; # Adjust this to your public assets directory
        #     expires 30d;
        #     access_log off;
        #     add_header Cache-Control "public";
        # }

        # Proxy all other requests to the Next.js Consumer Web App
        location / {
            proxy_pass http://boomcard_consumer_app;
            proxy_http_version 1.1; # Required for keep-alive connections
            proxy_set_header Upgrade $http_upgrade; # Required for WebSockets
            proxy_set_header Connection 'upgrade'; # Required for WebSockets
            proxy_set_header Host $host; # Pass original host header
            proxy_cache_bypass $http_upgrade; # Don't cache upgrade requests
            proxy_set_header X-Real-IP $remote_addr; # Pass client's real IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Append to X-Forwarded-For
            proxy_set_header X-Forwarded-Proto $scheme; # Pass original protocol (http/https)
            proxy_set_header X-Forwarded-Host $host; # Pass original host
            proxy_redirect off; # Disable Nginx from rewriting redirects from backend

            # Adjust proxy timeouts if your Next.js app has long-running processes
            proxy_read_timeout 90s;
            proxy_send_timeout 90s;
            proxy_connect_timeout 90s;
        }
    }

    # Server block for partners.boomcard.com (Partner Dashboard)
    server {
        listen 80;
        server_name partners.boomcard.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name partners.boomcard.com;

        # SSL certificate paths (REPLACE WITH YOUR ACTUAL CERTIFICATE AND KEY PATHS)
        ssl_certificate /etc/nginx/ssl/partners.boomcard.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/partners.boomcard.com/privkey.pem;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";

        location ~ ^/_next/static/ {
            # IMPORTANT: Replace with the actual absolute path to your partner app's .next/static directory
            alias /var/www/boomcard/partner-app/.next/static/;
            expires 1y;
            access_log off;
            add_header Cache-Control "public, immutable";
        }

        location / {
            proxy_pass http://boomcard_partner_dashboard;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_redirect off;
            proxy_read_timeout 90s;
            proxy_send_timeout 90s;
            proxy_connect_timeout 90s;
        }
    }

    # Server block for admin.boomcard.com (Admin Panel)
    server {
        listen 80;
        server_name admin.boomcard.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name admin.boomcard.com;

        # SSL certificate paths (REPLACE WITH YOUR ACTUAL CERTIFICATE AND KEY PATHS)
        ssl_certificate /etc/nginx/ssl/admin.boomcard.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/admin.boomcard.com/privkey.pem;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";

        location ~ ^/_next/static/ {
            # IMPORTANT: Replace with the actual absolute path to your admin app's .next/static directory
            alias /var/www/boomcard/admin-app/.next/static/;
            expires 1y;
            access_log off;
            add_header Cache-Control "public, immutable";
        }

        location / {
            proxy_pass http://boomcard_admin_panel;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_redirect off;
            proxy_read_timeout 90s;
            proxy_send_timeout 90s;
            proxy_connect_timeout 90s;
        }
    }

    # Server block for api.boomcard.com (API Gateway - Node.js/Express)
    server {
        listen 80;
        server_name api.boomcard.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name api.boomcard.com;

        # SSL certificate paths (REPLACE WITH YOUR ACTUAL CERTIFICATE AND KEY PATHS)
        ssl_certificate /etc/nginx/ssl/api.boomcard.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/api.boomcard.com/privkey.pem;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY"; # API should never be framed
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer"; # For API, restrict referrer for security

        # Apply rate limiting if defined in http block
        # location / {
        #     limit_req zone=api_rate_limit burst=20 nodelay; # Allow 20 requests burst, no delay
        #     limit_conn api_conn_limit 10; # Allow max 10 concurrent connections from one IP
        #     # Add a 503 error page if rate limit is exceeded
        #     error_page 503 /rate_limit_error.html;
        #     # root /usr/share/nginx/html; # Ensure /rate_limit_error.html exists here
        # }

        # Proxy requests to the Node.js API Gateway
        location / {
            proxy_pass http://boomcard_api_gateway;
            proxy_http_version 1.1;
            # These headers are crucial for WebSocket proxying if your API uses them
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade"; # Important for persistent connections (WebSockets)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_redirect off; # Do not rewrite 'Location' header from backend

            # Adjust proxy timeouts for API if it handles long-running requests (e.g., file uploads)
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
            proxy_connect_timeout 120s;

            # Buffering configuration (adjust based on API response sizes)
            proxy_buffering on;
            proxy_buffers 8 16k; # Number and size of buffers for responses
            proxy_buffer_size 16k; # Size of the first buffer
        }
    }
}