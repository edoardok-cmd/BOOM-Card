```nginx
# Nginx Load Balancer Configuration for BOOM Card Platform
# Production-ready configuration with health checks, SSL termination, and caching

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format with request tracking
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main buffer=16k;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://apis.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https: wss:;" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=30r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # Upstream backend servers with health checks
    upstream api_backend {
        least_conn;
        
        server api1.boomcard.internal:3000 max_fails=3 fail_timeout=30s;
        server api2.boomcard.internal:3000 max_fails=3 fail_timeout=30s;
        server api3.boomcard.internal:3000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    upstream web_backend {
        least_conn;
        
        server web1.boomcard.internal:3001 max_fails=3 fail_timeout=30s;
        server web2.boomcard.internal:3001 max_fails=3 fail_timeout=30s;
        server web3.boomcard.internal:3001 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    upstream admin_backend {
        least_conn;
        
        server admin1.boomcard.internal:3002 max_fails=2 fail_timeout=30s;
        server admin2.boomcard.internal:3002 max_fails=2 fail_timeout=30s;
        
        keepalive 16;
    }

    upstream partner_backend {
        least_conn;
        
        server partner1.boomcard.internal:3003 max_fails=2 fail_timeout=30s;
        server partner2.boomcard.internal:3003 max_fails=2 fail_timeout=30s;
        
        keepalive 16;
    }

    upstream pos_backend {
        ip_hash;  # Sticky sessions for POS systems
        
        server pos1.boomcard.internal:3004 max_fails=2 fail_timeout=30s;
        server pos2.boomcard.internal:3004 max_fails=2 fail_timeout=30s;
        
        keepalive 16;
    }

    # Cache configuration
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:100m max_size=10g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:50m max_size=1g inactive=10m use_temp_path=off;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name boomcard.bg www.boomcard.bg api.boomcard.bg admin.boomcard.bg partner.boomcard.bg pos.boomcard.bg;
        return 301 https://$server_name$request_uri;
    }

    # Main website
    server {
        listen 443 ssl http2;
        server_name boomcard.bg www.boomcard.bg;

        ssl_certificate /etc/nginx/ssl/boomcard.bg.crt;
        ssl_certificate_key /etc/nginx/ssl/boomcard.bg.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Rate limiting
        limit_req zone=general_limit burst=50 nodelay;
        limit_conn conn_limit 100;

        # Security
        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$) {
            return 405;
        }

        # Static assets with caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://web_backend;
            proxy_cache static_cache;
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Next.js specific
        location /_next/static {
            proxy_pass http://web_backend;
            proxy_cache static_cache;
            proxy_cache_valid 200 60m;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        location / {
            proxy_pass http://web_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
        }

        # Language-specific routes
        location ~ ^/(en|bg)/ {
            proxy_pass http://web_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # API server
    server {
        listen 443 ssl http2;
        server_name api.boomcard.bg;

        ssl_certificate /etc/nginx/ssl/api.boomcard.bg.crt;
        ssl_certificate_key /etc/nginx/ssl/api.boomcard.bg.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # CORS headers
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

        # Rate limiting for API
        location /api/v1/auth {
            limit_req zone=auth_limit burst=10 nodelay;
            proxy_pass http://api_backend;
            include /etc/nginx/proxy_params;
        }

        location /api/v1 {
            limit_req zone=api_limit burst=20 nodelay;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }

            proxy_pass http://api_backend;
            include /etc/nginx/proxy_params;
            
            # API response caching for GET requests
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_key "$scheme$request_method$host$request_uri$http_authorization";
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # WebSocket support for real-time features
        location /ws {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
        }
    }

    # Admin panel
    server {
        listen 443 ssl http2;
        server_name admin.boomcard.bg;

        ssl_certificate /etc/nginx/ssl/admin.boomcard.bg.crt;
        ssl_certificate_key /etc/nginx/ssl/admin.