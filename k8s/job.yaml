apiVersion: batch/v1
kind: Job
metadata:
  name: boom-card-db-migration
  namespace: boom-card
  labels:
    app: boom-card
    component: migration
    tier: backend
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: boom-card
        component: migration
        tier: backend
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z boom-card-postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
      - name: db-migration
        image: boom-card/backend:latest
        imagePullPolicy: Always
        command: ["npm", "run", "migrate:prod"]
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: database-url
        - name: DATABASE_HOST
          value: "boom-card-postgres-service"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: database-name
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: database-user
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: database-password
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      imagePullSecrets:
      - name: boom-card-registry-secret
---
apiVersion: batch/v1
kind: Job
metadata:
  name: boom-card-seed-data
  namespace: boom-card
  labels:
    app: boom-card
    component: seed
    tier: backend
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: boom-card
        component: seed
        tier: backend
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-migration
        image: busybox:1.35
        command: 
        - sh
        - -c
        - |
          until kubectl get job boom-card-db-migration -n boom-card -o jsonpath='{.status.succeeded}' | grep -q "1"; do
            echo "Waiting for migration job to complete..."
            sleep 5
          done
      containers:
      - name: seed-data
        image: boom-card/backend:latest
        imagePullPolicy: Always
        command: ["npm", "run", "seed:prod"]
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: database-url
        - name: ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: admin-email
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: admin-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: boom-card-secrets
              key: jwt-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      serviceAccountName: boom-card-service-account
      imagePullSecrets:
      - name: boom-card-registry-secret
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: boom-card-backup
  namespace: boom-card
  labels:
    app: boom-card
    component: backup
    tier: backend
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: boom-card
            component: backup
            tier: backend
        spec:
          restartPolicy: OnFailure
          containers:
          - name: postgres-backup
            image: postgres:15-alpine
            command:
            - sh
            - -c
            - |
              DATE=$(date +%Y%m%d_%H%M%S)
              PGPASSWORD=$DATABASE_PASSWORD pg_dump \
                -h $DATABASE_HOST \
                -p $DATABASE_PORT \
                -U $DATABASE_USER \
                -d $DATABASE_NAME \
                --no-owner \
                --clean \
                --if-exists \
                -f /backup/boom-card-backup-$DATE.sql
              
              # Upload to S3 or other storage
              if [ -n "$AWS_ACCESS_KEY_ID" ]; then
                apk add --no-cache aws-cli
                aws s3 cp /backup/boom-card-backup-$DATE.sql s3://$S3_BUCKET/backups/
                # Keep only last 30 days of backups
                aws s3 ls s3://$S3_BUCKET/backups/ | while read -r line; do
                  createDate=$(echo $line | awk '{print $1" "$2}')
                  createDate=$(date -d "$createDate" +%s)
                  olderThan=$(date -d "30 days ago" +%s)
                  if [[ $createDate -lt $olderThan ]]; then
                    fileName=$(echo $line | awk '{print $4}')
                    if [[ $fileName != "" ]]; then
                      aws s3 rm s3://$S3_BUCKET/backups/$fileName
                    fi
                  fi
                done
              fi
            env:
            - name: DATABASE_HOST
              value: "boom-card-postgres-service"
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: boom-card-secrets
                  key: database-name
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: boom-card-secrets
                  key: database-user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: boom-card-secrets
                  key: database-password
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: boom-card-aws-secrets
                  key: access-key-id
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: boom-card-aws-secrets
                  key: secret-access-key
                  optional: true
            - name: AWS_DEFAULT_REGION
              value: "eu-west-1"
            - name: S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: boom-card-config
                  key: backup-s3-bucket
                  optional: true
            volumeMounts:
            - name: backup-storage
              mountPath: /backup
            resources:
              requests:
                memory: "256Mi"
                cpu: "250m"
              limits:
                memory: "512Mi"
                cpu: "500m"
          volumes:
          - name: backup-storage
            emptyDir: {}
          imagePullSecrets:
          - name: boom-card-registry-secret
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: boom-card-cleanup
  namespace: boom-card
  labels:
    app: boom-card
    component: cleanup
    tier: backend
spec:
  schedule: "0 3 * * *"  # Daily at 3 AM
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: boom-card
            component: cleanup
            tier: backend
        spec:
          restartPolicy: OnFailure
          containers:
          - name: cleanup
            image: boom-card/backend:latest
            imagePullPolicy: Always
            command: ["npm", "run", "cleanup:prod"]
            env:
            - name: NODE_ENV
              value: "production"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: boom-card-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: boom-card-secrets
                  key: redis-url
            - name: CLEANUP_EXPIRED_SESSIONS
              value: "true"
            - name: CLEANUP_OLD_LOGS
              value: "true"
            - name: CLEANUP_TEMP_FILES
              value: "true"
            - name: LOG_RETENTION_DAYS
              value: "90"
            resources:
              requests:
                memory: "256Mi"
                cpu: "250m"
              limits:
                memory: "512Mi"
                cpu: "500m"
          imagePullSecrets:
          - name: boom-card-registry-secret
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: boom-card-analytics
  namespace: boom-card
  labels:
    app: boom-card
    component: analytics
    tier: backend
spec:
  schedule: "0 1 * * *"  # Daily at 1 AM
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: boom-card
            component: analytics
            tier: backend
        spec:
          restartPolicy: OnFailure
          containers:
          - name: analytics-aggregation
            image: boom-card/backend:latest
            imagePullPolicy: Always
            command: ["npm", "run", "analytics:aggregate"]
            env:
            - name: NODE_ENV
              value: "production"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: boom-card-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: boom-card-secrets
                  key: redis-url
            - name: